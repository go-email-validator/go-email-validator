on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
name: Test
env:
  GO_TARGET_VERSION: 1.16.x
  OS_CODE_COVERAGE: ubuntu-latest
jobs:
  test:
    strategy:
      matrix:
        go-version:
          - 1.14.x
          - 1.15.x
          - 1.16.x
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod              # Module download cache
            ~/.cache/go-build         # Build cache (Linux)
            ~/Library/Caches/go-build # Build cache (Mac)
            '%LocalAppData%\go-build' # Build cache (Windows)
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: socks5
        run: docker run --name proxy -dit --rm -p 1080:1080 -e 'SSS_USERNAME=username' -e 'SSS_PASSWORD=password' dijedodol/simple-socks5-server || sleep 2.5
      - name: Full test
        run: make go.test
        env:
          PROXIES: "socks5://username:password@127.0.0.1:1080"
      - name: socks5 stop
        if: ${{ always() }}
        run: docker stop proxy
      - name: Upload coverage to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        if:  ${{ env.CODECOV_TOKEN != null }} && ${{ matrix.os == env.OS_CODE_COVERAGE }} && ${{ matrix.go-version == env.GO_TARGET_VERSION }}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.out
          fail_ci_if_error: true
          path_to_write_report: ./codecov_report.txt
          verbose: true